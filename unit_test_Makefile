# Unit Test Makefile for ft_printf
# This Makefile compiles and runs comprehensive unit tests

# Test program name
NAME = unit_test

# Library name (the ft_printf library we're testing)
LIB = libftprintf.a

# Compiler and flags
CC = cc
CFLAGS = -Wall -Wextra -Werror

# Source files for the unit test program
SRCS = test_unit.c

# Object files for the unit test program
OBJS = $(SRCS:.c=.o)

# Default target: build library and unit test program
all: $(LIB) $(NAME)

# Build the ft_printf library first
$(LIB):
	make -f Makefile

# Build the unit test program by linking with the library
$(NAME): $(OBJS) $(LIB)
	$(CC) $(CFLAGS) $(OBJS) $(LIB) -o $(NAME)

# Compile unit test source files to object files
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Run the unit test program
test: $(NAME)
	./$(NAME)

# Run tests with verbose output
test_verbose: $(NAME)
	./$(NAME) | tee test_results.txt

# Clean unit test object files and program
clean:
	rm -f $(OBJS)
	rm -f $(NAME)
	rm -f test_results.txt

# Clean everything (unit test objects, program, and library)
fclean: clean
	make -f Makefile fclean

# Rebuild everything from scratch
re: fclean all

# Run specific test categories (for debugging)
test_char: $(NAME)
	./$(NAME) | grep -A 20 "Character Conversion"

test_string: $(NAME)
	./$(NAME) | grep -A 20 "String Conversion"

test_number: $(NAME)
	./$(NAME) | grep -A 20 "Decimal Conversion\|Integer Conversion\|Unsigned Conversion"

test_hex: $(NAME)
	./$(NAME) | grep -A 20 "Hex"

test_bonus: $(NAME)
	./$(NAME) | grep -A 20 "Complex Formatting"

# Declare phony targets
.PHONY: all test test_verbose clean fclean re test_char test_string test_number test_hex test_bonus 